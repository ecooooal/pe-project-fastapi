2025-08-13 10:26:14,262 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:26:17,474 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:26:19,258 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:26:20,455 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:26:31,338 [INFO] app - Got message b'1755080791337-0': {b'data': b'[{"answer_id":135,"language":"java","data":{"runtime_points":"10","syntax_points":"10","code":"public class MaxFinder {\\n\\n    \\/\\/ Method to find the maximum of three numbers\\n    public static int findMax(int a, int b, int c) {\\n      \\/\\/ Put your codes here\\n    }\\n}","testUnit":"import static org.junit.jupiter.api.Assertions.*;\\nimport org.junit.jupiter.api.Test;\\n\\npublic class MaxFinderTest {\\n\\n    @Test\\n    public void testFindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n    @Test\\n    public void testindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n}","test_case_points":"10"}},{"answer_id":136,"language":"java","data":{"runtime_points":"2","syntax_points":"2","code":"public class SumOfMultiples {\\n    public static int sumOfMultiples(int limit, int[] divisors) {\\n        int sum = 0;\\n        for (int i = 1; i < limit; i++) {\\n            for (int div : divisors) {\\n                if (i % div == 0) {\\n                    sum += i;\\n                    break; \\n                }\\n            }\\n        }\\n        return sum;\\n    }\\n}","testUnit":"import org.junit.jupiter.api.Test;\\nimport static org.junit.jupiter.api.Assertions.*;\\n\\npublic class SumOfMultiplesTest {\\n\\n\\n\\n    @Test\\n    public void testNegativeLimitReturnsZero() {\\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\\n    }\\n\\n    @Test\\n    public void testLargeInput() {\\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\\n        assertTrue(result > 0); \\/\\/ sanity check\\n    }\\n}\\n","test_case_points":"2"}}]'}
2025-08-13 10:26:31,338 [INFO] app - item {'answer_id': 135, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:26:31,347 [INFO] app - Processing message 135: {'answer_id': 135, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:26:31,347 [INFO] app - executing to each language executor
2025-08-13 10:26:31,347 [INFO] app - This is the fields to send in JSON {'answer_id': 135, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:26:31,349 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:26:31,361 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 500 91
2025-08-13 10:26:31,371 [INFO] app - Checking Response : <Response [500]>
2025-08-13 10:26:31,371 [INFO] app - results : {'error': 'Cannot invoke "java.lang.CharSequence.length()" because "this.text" is null'}
2025-08-13 10:26:31,372 [INFO] app - item {'answer_id': 136, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:26:31,373 [INFO] app - Processing message 136: {'answer_id': 136, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:26:31,373 [INFO] app - executing to each language executor
2025-08-13 10:26:31,373 [INFO] app - This is the fields to send in JSON {'answer_id': 136, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:26:31,374 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:26:31,405 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 500 91
2025-08-13 10:26:31,406 [INFO] app - Checking Response : <Response [500]>
2025-08-13 10:26:31,406 [INFO] app - results : {'error': 'Cannot invoke "java.lang.CharSequence.length()" because "this.text" is null'}
2025-08-13 10:28:47,388 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:07,565 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:12,767 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:16,952 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:19,839 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:28,673 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:30,565 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:34,004 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:36,217 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:43,464 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:44,753 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:29:56,087 [INFO] app - Got message b'1755080996086-0': {b'data': b'[{"answer_id":138,"language":"java","data":{"runtime_points":"2","syntax_points":"2","code":"public class SumOfMultiples {\\n    public static int sumOfMultiples(int limit, int[] divisors) {\\n        int sum = 0;\\n        for (int i = 1; i < limit; i++) {\\n            for (int div : divisors) {\\n                if (i % div == 0) {\\n                    sum += i;\\n                    break; \\n                }\\n            }\\n        }\\n        return sum;\\n    }\\n}","testUnit":"import org.junit.jupiter.api.Test;\\nimport static org.junit.jupiter.api.Assertions.*;\\n\\npublic class SumOfMultiplesTest {\\n\\n\\n\\n    @Test\\n    public void testNegativeLimitReturnsZero() {\\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\\n    }\\n\\n    @Test\\n    public void testLargeInput() {\\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\\n        assertTrue(result > 0); \\/\\/ sanity check\\n    }\\n}\\n","test_case_points":"2"}},{"answer_id":137,"language":"java","data":{"runtime_points":"10","syntax_points":"10","code":"public class MaxFinder {\\n\\n    \\/\\/ Method to find the maximum of three numbers\\n    public static int findMax(int a, int b, int c) {\\n      \\/\\/ Put your codes here\\n    }\\n}","testUnit":"import static org.junit.jupiter.api.Assertions.*;\\nimport org.junit.jupiter.api.Test;\\n\\npublic class MaxFinderTest {\\n\\n    @Test\\n    public void testFindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n    @Test\\n    public void testindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n}","test_case_points":"10"}}]'}
2025-08-13 10:29:56,087 [INFO] app - item {'answer_id': 138, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:29:56,088 [INFO] app - Processing message 138: {'answer_id': 138, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:29:56,088 [INFO] app - Extract language and data java: {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}
2025-08-13 10:29:56,088 [INFO] app - executing to each language executor
2025-08-13 10:29:56,088 [INFO] app - This is the fields to send in JSON {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}
2025-08-13 10:29:56,090 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:29:56,194 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 500 76
2025-08-13 10:29:56,195 [INFO] app - Checking Response : <Response [500]>
2025-08-13 10:29:56,195 [INFO] app - results : {'error': 'Cannot invoke "String.toUpperCase()" because "value" is null'}
2025-08-13 10:29:56,196 [INFO] app - item {'answer_id': 137, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:29:56,197 [INFO] app - Processing message 137: {'answer_id': 137, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:29:56,197 [INFO] app - Extract language and data java: {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}
2025-08-13 10:29:56,198 [INFO] app - executing to each language executor
2025-08-13 10:29:56,198 [INFO] app - This is the fields to send in JSON {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}
2025-08-13 10:29:56,199 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:29:56,268 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 500 76
2025-08-13 10:29:56,268 [INFO] app - Checking Response : <Response [500]>
2025-08-13 10:29:56,268 [INFO] app - results : {'error': 'Cannot invoke "String.toUpperCase()" because "value" is null'}
2025-08-13 10:32:21,717 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:32:41,856 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:32:44,755 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:33:31,935 [INFO] app - Got message b'1755081211929-0': {b'data': b'[{"answer_id":140,"language":"java","data":{"runtime_points":"10","syntax_points":"10","code":"public class MaxFinder {\\n\\n    \\/\\/ Method to find the maximum of three numbers\\n    public static int findMax(int a, int b, int c) {\\n      \\/\\/ Put your codes here\\n    }\\n}","testUnit":"import static org.junit.jupiter.api.Assertions.*;\\nimport org.junit.jupiter.api.Test;\\n\\npublic class MaxFinderTest {\\n\\n    @Test\\n    public void testFindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n    @Test\\n    public void testindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n}","test_case_points":"10"}},{"answer_id":139,"language":"java","data":{"runtime_points":"2","syntax_points":"2","code":"public class SumOfMultiples {\\n    public static int sumOfMultiples(int limit, int[] divisors) {\\n        int sum = 0;\\n        for (int i = 1; i < limit; i++) {\\n            for (int div : divisors) {\\n                if (i % div == 0) {\\n                    sum += i;\\n                    break; \\n                }\\n            }\\n        }\\n        return sum;\\n    }\\n}","testUnit":"import org.junit.jupiter.api.Test;\\nimport static org.junit.jupiter.api.Assertions.*;\\n\\npublic class SumOfMultiplesTest {\\n\\n\\n\\n    @Test\\n    public void testNegativeLimitReturnsZero() {\\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\\n    }\\n\\n    @Test\\n    public void testLargeInput() {\\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\\n        assertTrue(result > 0); \\/\\/ sanity check\\n    }\\n}\\n","test_case_points":"2"}}]'}
2025-08-13 10:33:31,939 [INFO] app - item {'answer_id': 140, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:33:31,952 [INFO] app - Processing message 140: {'answer_id': 140, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:33:31,953 [INFO] app - Extract language and data java: {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:33:31,953 [INFO] app - executing to each language executor
2025-08-13 10:33:31,954 [INFO] app - This is the fields to send in JSON {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:33:31,955 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:33:39,278 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 615
2025-08-13 10:33:39,278 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:33:39,279 [INFO] app - results : {'success': False, 'testResults': [], 'failures': ['src/main/java/MaxFinder.java:6: error: missing return statement\n    }\n    ^\n1 error\n'], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Compilation Unsuccessful.'], 'output': '', 'points': [{'syntax': '9', 'runtime': '0', 'testcase': '0'}]}
2025-08-13 10:33:39,297 [INFO] app - item {'answer_id': 139, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:33:39,298 [INFO] app - Processing message 139: {'answer_id': 139, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:33:39,298 [INFO] app - Extract language and data java: {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:33:39,298 [INFO] app - executing to each language executor
2025-08-13 10:33:39,298 [INFO] app - This is the fields to send in JSON {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:33:39,299 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:33:49,694 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 3432
2025-08-13 10:33:49,695 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:33:49,695 [INFO] app - results : {'success': True, 'testResults': [{'className': 'SumOfMultiplesTest', 'methods': [{'methodName': 'testNegativeLimitReturnsZero()', 'status': 'PASSED', 'message': ''}, {'methodName': 'testLargeInput()', 'status': 'PASSED', 'message': ''}]}], 'failures': [], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Now sending the context to RunTimeHandler.', 'RunTimeHandler: RunTimeHandler Starting.', 'RunTimeHandler: Running the code against the test code.', 'RunTimeHandler: Code is running... will threw exception if it exceeds 10 seconds.', 'RunTimeHandler: Running code did not throw any exceptions.', 'RunTimeHandler: Now sending the context to TestEvaluationHandler.', 'TestEvaluationHandler: TestEvaluationHandler Starting.', 'TestEvaluationHandler: Starting to read xml JUnit reports.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testNegativeLimitReturnsZero() children.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testNegativeLimitReturnsZero() child data:  Name system-out status PASSED', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testLargeInput() children.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testLargeInput() child data:  Name system-out status PASSED', 'TestEvaluationHandler: READING RESULTS', 'method: testNegativeLimitReturnsZero() (status: PASSED)', 'method: testLargeInput() (status: PASSED)', 'TestEvaluationHandler: Did all test cases passed? true', 'CodeResponse: success=true, runtime=2, test_case=2, syntax=2', 'TestEvaluationHandler: Now sending the response back.'], 'output': "\nThanks for using JUnit! Support its development at https://junit.org/sponsoring\n\n\x1b[36mâ•·\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Platform Suite\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Jupiter\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚  â””â”€\x1b[0m \x1b[36mSumOfMultiplesTest\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚     â”œâ”€\x1b[0m \x1b[34mtestNegativeLimitReturnsZero()\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚     â””â”€\x1b[0m \x1b[34mtestLargeInput()\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ””â”€\x1b[0m \x1b[36mJUnit Vintage\x1b[0m \x1b[32mâœ”\x1b[0m\n\nTest run finished after 1118 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         2 tests found           ]\n[         0 tests skipped         ]\n[         2 tests started         ]\n[         0 tests aborted         ]\n[         2 tests successful      ]\n[         0 tests failed          ]\n\n\nWARNING: Delegated to the 'execute' command.\n         This behaviour has been deprecated and will be removed in a future release.\n         Please use the 'execute' command directly.\n", 'points': [{'syntax': '2', 'runtime': '2', 'testcase': '2'}]}
2025-08-13 10:35:31,587 [INFO] app - Got message b'1755081331587-0': {b'data': b'[{"answer_id":141,"language":"java","data":{"runtime_points":"10","syntax_points":"10","code":"public class MaxFinder {\\n\\n    \\/\\/ Method to find the maximum of three numbers\\n    public static int findMax(int a, int b, int c) \\n      \\/\\/ Put your codes here\\n    }\\n}","testUnit":"import static org.junit.jupiter.api.Assertions.*;\\nimport org.junit.jupiter.api.Test;\\n\\npublic class MaxFinderTest {\\n\\n    @Test\\n    public void testFindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n    @Test\\n    public void testindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n}","test_case_points":"10"}},{"answer_id":142,"language":"java","data":{"runtime_points":"2","syntax_points":"2","code":"public class SumOfMultiples {\\n    public static int sumOfMultiples(int limit, int[] divisors) {\\n        int sum = 0;\\n        for (int i = 1; i < limit; i++) {\\n            for (int div : divisors) {\\n                if (i % div == 0) {\\n                    sum += i;\\n                    break; \\n                }\\n            }\\n        }\\n        return sum;\\n    }\\n}","testUnit":"import org.junit.jupiter.api.Test;\\nimport static org.junit.jupiter.api.Assertions.*;\\n\\npublic class SumOfMultiplesTest {\\n\\n\\n\\n    @Test\\n    public void testNegativeLimitReturnsZero() {\\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\\n    }\\n\\n    @Test\\n    public void testLargeInput() {\\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\\n        assertTrue(result > 0); \\/\\/ sanity check\\n    }\\n}\\n","test_case_points":"2"}}]'}
2025-08-13 10:35:31,588 [INFO] app - item {'answer_id': 141, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) \n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:35:31,588 [INFO] app - Processing message 141: {'answer_id': 141, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) \n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:35:31,588 [INFO] app - Extract language and data java: {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) \n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:35:31,589 [INFO] app - executing to each language executor
2025-08-13 10:35:31,589 [INFO] app - This is the fields to send in JSON {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) \n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:35:31,589 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:35:33,360 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 795
2025-08-13 10:35:33,362 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:35:33,362 [INFO] app - results : {'success': False, 'testResults': [], 'failures': ["src/main/java/MaxFinder.java:4: error: ';' expected\n    public static int findMax(int a, int b, int c) \n                                                  ^\nsrc/main/java/MaxFinder.java:7: error: class, interface, enum, or record expected\n}\n^\n2 errors\n"], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Compilation Unsuccessful.'], 'output': '', 'points': [{'syntax': '8', 'runtime': '0', 'testcase': '0'}]}
2025-08-13 10:35:33,363 [INFO] app - item {'answer_id': 142, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:35:33,363 [INFO] app - Processing message 142: {'answer_id': 142, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:35:33,363 [INFO] app - Extract language and data java: {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:35:33,363 [INFO] app - executing to each language executor
2025-08-13 10:35:33,363 [INFO] app - This is the fields to send in JSON {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:35:33,364 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:35:38,446 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 3431
2025-08-13 10:35:38,447 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:35:38,447 [INFO] app - results : {'success': True, 'testResults': [{'className': 'SumOfMultiplesTest', 'methods': [{'methodName': 'testNegativeLimitReturnsZero()', 'status': 'PASSED', 'message': ''}, {'methodName': 'testLargeInput()', 'status': 'PASSED', 'message': ''}]}], 'failures': [], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Now sending the context to RunTimeHandler.', 'RunTimeHandler: RunTimeHandler Starting.', 'RunTimeHandler: Running the code against the test code.', 'RunTimeHandler: Code is running... will threw exception if it exceeds 10 seconds.', 'RunTimeHandler: Running code did not throw any exceptions.', 'RunTimeHandler: Now sending the context to TestEvaluationHandler.', 'TestEvaluationHandler: TestEvaluationHandler Starting.', 'TestEvaluationHandler: Starting to read xml JUnit reports.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testNegativeLimitReturnsZero() children.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testNegativeLimitReturnsZero() child data:  Name system-out status PASSED', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testLargeInput() children.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testLargeInput() child data:  Name system-out status PASSED', 'TestEvaluationHandler: READING RESULTS', 'method: testNegativeLimitReturnsZero() (status: PASSED)', 'method: testLargeInput() (status: PASSED)', 'TestEvaluationHandler: Did all test cases passed? true', 'CodeResponse: success=true, runtime=2, test_case=2, syntax=2', 'TestEvaluationHandler: Now sending the response back.'], 'output': "\nThanks for using JUnit! Support its development at https://junit.org/sponsoring\n\n\x1b[36mâ•·\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Platform Suite\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Jupiter\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚  â””â”€\x1b[0m \x1b[36mSumOfMultiplesTest\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚     â”œâ”€\x1b[0m \x1b[34mtestNegativeLimitReturnsZero()\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚     â””â”€\x1b[0m \x1b[34mtestLargeInput()\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ””â”€\x1b[0m \x1b[36mJUnit Vintage\x1b[0m \x1b[32mâœ”\x1b[0m\n\nTest run finished after 350 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         2 tests found           ]\n[         0 tests skipped         ]\n[         2 tests started         ]\n[         0 tests aborted         ]\n[         2 tests successful      ]\n[         0 tests failed          ]\n\n\nWARNING: Delegated to the 'execute' command.\n         This behaviour has been deprecated and will be removed in a future release.\n         Please use the 'execute' command directly.\n", 'points': [{'syntax': '2', 'runtime': '2', 'testcase': '2'}]}
2025-08-13 10:37:00,913 [INFO] app - Got message b'1755081420911-0': {b'data': b'[{"answer_id":144,"language":"java","data":{"runtime_points":"10","syntax_points":"10","code":"public class MaxFinder {\\n\\n    \\/\\/ Method to find the maximum of three numbers\\n    public static int findMax(int a, int b, int c) {\\n      int p = 1\\/0;\\n    }\\n}","testUnit":"import static org.junit.jupiter.api.Assertions.*;\\nimport org.junit.jupiter.api.Test;\\n\\npublic class MaxFinderTest {\\n\\n    @Test\\n    public void testFindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n    @Test\\n    public void testindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n}","test_case_points":"10"}},{"answer_id":143,"language":"java","data":{"runtime_points":"2","syntax_points":"2","code":"public class SumOfMultiples {\\n    public static int sumOfMultiples(int limit, int[] divisors) {\\n        int sum = 0;\\n        for (int i = 1; i < limit; i++) {\\n            for (int div : divisors) {\\n                if (i % div == 0) {\\n                    sum += i;\\n                    break; \\n                }\\n            }\\n        }\\n        return sum;\\n    }\\n}","testUnit":"import org.junit.jupiter.api.Test;\\nimport static org.junit.jupiter.api.Assertions.*;\\n\\npublic class SumOfMultiplesTest {\\n\\n\\n\\n    @Test\\n    public void testNegativeLimitReturnsZero() {\\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\\n    }\\n\\n    @Test\\n    public void testLargeInput() {\\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\\n        assertTrue(result > 0); \\/\\/ sanity check\\n    }\\n}\\n","test_case_points":"2"}}]'}
2025-08-13 10:37:00,913 [INFO] app - item {'answer_id': 144, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      int p = 1/0;\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:37:00,914 [INFO] app - Processing message 144: {'answer_id': 144, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      int p = 1/0;\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:37:00,914 [INFO] app - Extract language and data java: {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      int p = 1/0;\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:37:00,914 [INFO] app - executing to each language executor
2025-08-13 10:37:00,914 [INFO] app - This is the fields to send in JSON {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      int p = 1/0;\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:37:00,916 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:37:03,386 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 615
2025-08-13 10:37:03,388 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:37:03,388 [INFO] app - results : {'success': False, 'testResults': [], 'failures': ['src/main/java/MaxFinder.java:6: error: missing return statement\n    }\n    ^\n1 error\n'], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Compilation Unsuccessful.'], 'output': '', 'points': [{'syntax': '9', 'runtime': '0', 'testcase': '0'}]}
2025-08-13 10:37:03,389 [INFO] app - item {'answer_id': 143, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:37:03,389 [INFO] app - Processing message 143: {'answer_id': 143, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:37:03,389 [INFO] app - Extract language and data java: {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:37:03,390 [INFO] app - executing to each language executor
2025-08-13 10:37:03,390 [INFO] app - This is the fields to send in JSON {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:37:03,391 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:37:08,129 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 3431
2025-08-13 10:37:08,134 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:37:08,134 [INFO] app - results : {'success': True, 'testResults': [{'className': 'SumOfMultiplesTest', 'methods': [{'methodName': 'testNegativeLimitReturnsZero()', 'status': 'PASSED', 'message': ''}, {'methodName': 'testLargeInput()', 'status': 'PASSED', 'message': ''}]}], 'failures': [], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Now sending the context to RunTimeHandler.', 'RunTimeHandler: RunTimeHandler Starting.', 'RunTimeHandler: Running the code against the test code.', 'RunTimeHandler: Code is running... will threw exception if it exceeds 10 seconds.', 'RunTimeHandler: Running code did not throw any exceptions.', 'RunTimeHandler: Now sending the context to TestEvaluationHandler.', 'TestEvaluationHandler: TestEvaluationHandler Starting.', 'TestEvaluationHandler: Starting to read xml JUnit reports.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testNegativeLimitReturnsZero() children.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testNegativeLimitReturnsZero() child data:  Name system-out status PASSED', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testLargeInput() children.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testLargeInput() child data:  Name system-out status PASSED', 'TestEvaluationHandler: READING RESULTS', 'method: testNegativeLimitReturnsZero() (status: PASSED)', 'method: testLargeInput() (status: PASSED)', 'TestEvaluationHandler: Did all test cases passed? true', 'CodeResponse: success=true, runtime=2, test_case=2, syntax=2', 'TestEvaluationHandler: Now sending the response back.'], 'output': "\nThanks for using JUnit! Support its development at https://junit.org/sponsoring\n\n\x1b[36mâ•·\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Platform Suite\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Jupiter\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚  â””â”€\x1b[0m \x1b[36mSumOfMultiplesTest\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚     â”œâ”€\x1b[0m \x1b[34mtestNegativeLimitReturnsZero()\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚     â””â”€\x1b[0m \x1b[34mtestLargeInput()\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ””â”€\x1b[0m \x1b[36mJUnit Vintage\x1b[0m \x1b[32mâœ”\x1b[0m\n\nTest run finished after 358 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         2 tests found           ]\n[         0 tests skipped         ]\n[         2 tests started         ]\n[         0 tests aborted         ]\n[         2 tests successful      ]\n[         0 tests failed          ]\n\n\nWARNING: Delegated to the 'execute' command.\n         This behaviour has been deprecated and will be removed in a future release.\n         Please use the 'execute' command directly.\n", 'points': [{'syntax': '2', 'runtime': '2', 'testcase': '2'}]}
2025-08-13 10:39:16,741 [INFO] app - Got message b'1755081556740-0': {b'data': b'[{"answer_id":145,"language":"java","data":{"runtime_points":"10","syntax_points":"10","code":"public class MaxFinder {\\n\\n    \\/\\/ Method to find the maximum of three numbers\\n    public static int findMax(int a, int b, int c) {\\n      \\/\\/ Put your codes here\\n    }\\n}","testUnit":"import static org.junit.jupiter.api.Assertions.*;\\nimport org.junit.jupiter.api.Test;\\n\\npublic class MaxFinderTest {\\n\\n    @Test\\n    public void testFindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n    @Test\\n    public void testindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n}","test_case_points":"10"}},{"answer_id":146,"language":"java","data":{"runtime_points":"2","syntax_points":"2","code":"public class SumOfMultiples {\\n    public static int sumOfMultiples(int limit, int[] divisors) {\\n        int sum = 1\\/0;\\n        for (int i = 1; i < limit; i++) {\\n            for (int div : divisors) {\\n                if (i % div == 0) {\\n                    sum += i;\\n                    break; \\n                }\\n            }\\n        }\\n        return sum;\\n    }\\n}","testUnit":"import org.junit.jupiter.api.Test;\\nimport static org.junit.jupiter.api.Assertions.*;\\n\\npublic class SumOfMultiplesTest {\\n\\n\\n\\n    @Test\\n    public void testNegativeLimitReturnsZero() {\\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\\n    }\\n\\n    @Test\\n    public void testLargeInput() {\\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\\n        assertTrue(result > 0); \\/\\/ sanity check\\n    }\\n}\\n","test_case_points":"2"}}]'}
2025-08-13 10:39:16,749 [INFO] app - item {'answer_id': 145, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:39:16,762 [INFO] app - Processing message 145: {'answer_id': 145, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:39:16,762 [INFO] app - Extract language and data java: {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:39:16,762 [INFO] app - executing to each language executor
2025-08-13 10:39:16,762 [INFO] app - This is the fields to send in JSON {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:39:16,763 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:39:19,187 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 615
2025-08-13 10:39:19,188 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:39:19,188 [INFO] app - results : {'success': False, 'testResults': [], 'failures': ['src/main/java/MaxFinder.java:6: error: missing return statement\n    }\n    ^\n1 error\n'], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Compilation Unsuccessful.'], 'output': '', 'points': [{'syntax': '9', 'runtime': '0', 'testcase': '0'}]}
2025-08-13 10:39:19,190 [INFO] app - item {'answer_id': 146, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 1/0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:39:19,190 [INFO] app - Processing message 146: {'answer_id': 146, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 1/0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:39:19,190 [INFO] app - Extract language and data java: {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 1/0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:39:19,190 [INFO] app - executing to each language executor
2025-08-13 10:39:19,191 [INFO] app - This is the fields to send in JSON {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 1/0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:39:19,192 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:39:23,575 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 4441
2025-08-13 10:39:23,577 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:39:23,577 [INFO] app - results : {'success': False, 'testResults': [{'className': 'SumOfMultiplesTest', 'methods': [{'methodName': 'testNegativeLimitReturnsZero()', 'status': 'ERROR', 'message': '/ by zero'}, {'methodName': 'testLargeInput()', 'status': 'ERROR', 'message': '/ by zero'}]}], 'failures': [], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Now sending the context to RunTimeHandler.', 'RunTimeHandler: RunTimeHandler Starting.', 'RunTimeHandler: Running the code against the test code.', 'RunTimeHandler: Code is running... will threw exception if it exceeds 10 seconds.', 'RunTimeHandler: Running code did not throw any exceptions.', 'RunTimeHandler: Now sending the context to TestEvaluationHandler.', 'TestEvaluationHandler: TestEvaluationHandler Starting.', 'TestEvaluationHandler: Starting to read xml JUnit reports.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testNegativeLimitReturnsZero() children.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testLargeInput() children.', 'TestEvaluationHandler: READING RESULTS', 'method: testNegativeLimitReturnsZero() (status: ERROR)', 'method: testLargeInput() (status: ERROR)', 'TestEvaluationHandler: Did all test cases passed? false', 'CodeResponse: success=false, runtime=2, test_case=2, syntax=2', 'TestEvaluationHandler: Now sending the response back.'], 'output': "\nThanks for using JUnit! Support its development at https://junit.org/sponsoring\n\n\x1b[36mâ•·\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Platform Suite\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Jupiter\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚  â””â”€\x1b[0m \x1b[36mSumOfMultiplesTest\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚     â”œâ”€\x1b[0m \x1b[31mtestNegativeLimitReturnsZero()\x1b[0m \x1b[31mâœ˜\x1b[0m \x1b[31m/ by zero\x1b[0m\n\x1b[36mâ”‚     â””â”€\x1b[0m \x1b[31mtestLargeInput()\x1b[0m \x1b[31mâœ˜\x1b[0m \x1b[31m/ by zero\x1b[0m\n\x1b[36mâ””â”€\x1b[0m \x1b[36mJUnit Vintage\x1b[0m \x1b[32mâœ”\x1b[0m\n\nFailures (2):\n  JUnit Jupiter:SumOfMultiplesTest:testNegativeLimitReturnsZero()\n    MethodSource [className = 'SumOfMultiplesTest', methodName = 'testNegativeLimitReturnsZero', methodParameterTypes = '']\n    => java.lang.ArithmeticException: / by zero\n       SumOfMultiples.sumOfMultiples(SumOfMultiples.java:3)\n       SumOfMultiplesTest.testNegativeLimitReturnsZero(SumOfMultiplesTest.java:10)\n       java.base/java.lang.reflect.Method.invoke(Method.java:580)\n       java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n       java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n  JUnit Jupiter:SumOfMultiplesTest:testLargeInput()\n    MethodSource [className = 'SumOfMultiplesTest', methodName = 'testLargeInput', methodParameterTypes = '']\n    => java.lang.ArithmeticException: / by zero\n       SumOfMultiples.sumOfMultiples(SumOfMultiples.java:3)\n       SumOfMultiplesTest.testLargeInput(SumOfMultiplesTest.java:15)\n       java.base/java.lang.reflect.Method.invoke(Method.java:580)\n       java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n       java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\nTest run finished after 628 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         2 tests found           ]\n[         0 tests skipped         ]\n[         2 tests started         ]\n[         0 tests aborted         ]\n[         0 tests successful      ]\n[         2 tests failed          ]\n\n\nWARNING: Delegated to the 'execute' command.\n         This behaviour has been deprecated and will be removed in a future release.\n         Please use the 'execute' command directly.\n", 'points': [{'syntax': '2', 'runtime': '0', 'testcase': '0'}]}
2025-08-13 10:51:08,361 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:51:12,513 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:51:13,895 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:51:24,043 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:51:25,252 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:51:26,655 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:53:42,294 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:54:12,626 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:54:19,877 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:54:31,913 [INFO] app - ðŸš€ Starting FastAPI
2025-08-13 10:58:31,826 [INFO] app - Got message b'1755082711825-0': {b'data': b'[{"answer_id":148,"language":"java","data":{"runtime_points":"10","syntax_points":"10","code":"public class MaxFinder {\\n\\n    \\/\\/ Method to find the maximum of three numbers\\n    public static int findMax(int a, int b, int c) {\\n      \\/\\/ Put your codes here\\n    }\\n}","testUnit":"import static org.junit.jupiter.api.Assertions.*;\\nimport org.junit.jupiter.api.Test;\\n\\npublic class MaxFinderTest {\\n\\n    @Test\\n    public void testFindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n    @Test\\n    public void testindMax() {\\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\\n    }\\n}","test_case_points":"10"}},{"answer_id":147,"language":"java","data":{"runtime_points":"2","syntax_points":"2","code":"public class SumOfMultiples {\\n    public static int sumOfMultiples(int limit, int[] divisors) {\\n        int sum = 0;\\n        for (int i = 1; i < limit; i++) {\\n            for (int div : divisors) {\\n                if (i % div == 0) {\\n                    sum += i;\\n                    break; \\n                }\\n            }\\n        }\\n        return sum;\\n    }\\n}","testUnit":"import org.junit.jupiter.api.Test;\\nimport static org.junit.jupiter.api.Assertions.*;\\n\\npublic class SumOfMultiplesTest {\\n\\n\\n\\n    @Test\\n    public void testNegativeLimitReturnsZero() {\\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\\n    }\\n\\n    @Test\\n    public void testLargeInput() {\\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\\n        assertTrue(result > 0); \\/\\/ sanity check\\n    }\\n}\\n","test_case_points":"2"}}]'}
2025-08-13 10:58:31,827 [INFO] app - item {'answer_id': 148, 'language': 'java', 'data': {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10'}}
2025-08-13 10:58:31,827 [INFO] app - Extract language and data java: {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:58:31,828 [INFO] app - executing to language executor
2025-08-13 10:58:31,828 [INFO] app - This is the fields to send in JSON {'runtime_points': '10', 'syntax_points': '10', 'code': 'public class MaxFinder {\n\n    // Method to find the maximum of three numbers\n    public static int findMax(int a, int b, int c) {\n      // Put your codes here\n    }\n}', 'testUnit': 'import static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class MaxFinderTest {\n\n    @Test\n    public void testFindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n    @Test\n    public void testindMax() {\n        assertEquals(20, MaxFinder.findMax(10, 20, 15));\n        assertEquals(30, MaxFinder.findMax(30, 20, 10));\n        assertEquals(25, MaxFinder.findMax(25, 25, 25));\n        assertEquals(50, MaxFinder.findMax(50, 40, 50));\n    }\n}', 'test_case_points': '10', 'request_action': 'check'}
2025-08-13 10:58:31,829 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:58:34,000 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 615
2025-08-13 10:58:34,001 [INFO] app - --------------------------------------------------------------------------------
2025-08-13 10:58:34,001 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:58:34,001 [INFO] app - results : {'success': False, 'testResults': [], 'failures': ['src/main/java/MaxFinder.java:6: error: missing return statement\n    }\n    ^\n1 error\n'], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Compilation Unsuccessful.'], 'output': '', 'points': [{'syntax': '9', 'runtime': '0', 'testcase': '0'}]}
2025-08-13 10:58:34,001 [INFO] app - --------------------------------------------------------------------------------
2025-08-13 10:58:34,002 [INFO] app - item {'answer_id': 147, 'language': 'java', 'data': {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2'}}
2025-08-13 10:58:34,002 [INFO] app - Extract language and data java: {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:58:34,002 [INFO] app - executing to language executor
2025-08-13 10:58:34,002 [INFO] app - This is the fields to send in JSON {'runtime_points': '2', 'syntax_points': '2', 'code': 'public class SumOfMultiples {\n    public static int sumOfMultiples(int limit, int[] divisors) {\n        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int div : divisors) {\n                if (i % div == 0) {\n                    sum += i;\n                    break; \n                }\n            }\n        }\n        return sum;\n    }\n}', 'testUnit': 'import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SumOfMultiplesTest {\n\n\n\n    @Test\n    public void testNegativeLimitReturnsZero() {\n        assertEquals(0, SumOfMultiples.sumOfMultiples(-10, new int[]{3, 5}));\n    }\n\n    @Test\n    public void testLargeInput() {\n        int result = SumOfMultiples.sumOfMultiples(10000, new int[]{3, 5});\n        assertTrue(result > 0); // sanity check\n    }\n}\n', 'test_case_points': '2', 'request_action': 'check'}
2025-08-13 10:58:34,003 [DEBUG] urllib3.connectionpool - Starting new HTTP connection (1): java-api:8090
2025-08-13 10:58:37,785 [DEBUG] urllib3.connectionpool - http://java-api:8090 "POST /execute HTTP/1.1" 200 3431
2025-08-13 10:58:37,791 [INFO] app - --------------------------------------------------------------------------------
2025-08-13 10:58:37,791 [INFO] app - Checking Response : <Response [200]>
2025-08-13 10:58:37,791 [INFO] app - results : {'success': True, 'testResults': [{'className': 'SumOfMultiplesTest', 'methods': [{'methodName': 'testNegativeLimitReturnsZero()', 'status': 'PASSED', 'message': ''}, {'methodName': 'testLargeInput()', 'status': 'PASSED', 'message': ''}]}], 'failures': [], 'debug': ['SaveCodeHandler: Starting SaveCodeHandler.', 'SaveCodeHandler: Saving Codes.', 'SaveCodeHandler: Saving success, now sending the context to CompileHandler.', 'CompileHandler: Starting CompileHandler.', 'CompileHandler: Starting compilation.', 'CompileHandler: Compiling... will threw exception if it exceeds 10 seconds.', 'CompileHandler: Compilation Success.', 'CompileHandler: Now sending the context to RunTimeHandler.', 'RunTimeHandler: RunTimeHandler Starting.', 'RunTimeHandler: Running the code against the test code.', 'RunTimeHandler: Code is running... will threw exception if it exceeds 10 seconds.', 'RunTimeHandler: Running code did not throw any exceptions.', 'RunTimeHandler: Now sending the context to TestEvaluationHandler.', 'TestEvaluationHandler: TestEvaluationHandler Starting.', 'TestEvaluationHandler: Starting to read xml JUnit reports.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testNegativeLimitReturnsZero() children.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testNegativeLimitReturnsZero() child data:  Name system-out status PASSED', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testLargeInput() children.', 'TestEvaluationHandler: TEST-junit-jupiter.xml : Reading class SumOfMultiplesTest with method testLargeInput() child data:  Name system-out status PASSED', 'TestEvaluationHandler: READING RESULTS', 'method: testNegativeLimitReturnsZero() (status: PASSED)', 'method: testLargeInput() (status: PASSED)', 'TestEvaluationHandler: Did all test cases passed? true', 'CodeResponse: success=true, runtime=2, test_case=2, syntax=2', 'TestEvaluationHandler: Now sending the response back.'], 'output': "\nThanks for using JUnit! Support its development at https://junit.org/sponsoring\n\n\x1b[36mâ•·\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Platform Suite\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”œâ”€\x1b[0m \x1b[36mJUnit Jupiter\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚  â””â”€\x1b[0m \x1b[36mSumOfMultiplesTest\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚     â”œâ”€\x1b[0m \x1b[34mtestNegativeLimitReturnsZero()\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ”‚     â””â”€\x1b[0m \x1b[34mtestLargeInput()\x1b[0m \x1b[32mâœ”\x1b[0m\n\x1b[36mâ””â”€\x1b[0m \x1b[36mJUnit Vintage\x1b[0m \x1b[32mâœ”\x1b[0m\n\nTest run finished after 510 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[         2 tests found           ]\n[         0 tests skipped         ]\n[         2 tests started         ]\n[         0 tests aborted         ]\n[         2 tests successful      ]\n[         0 tests failed          ]\n\n\nWARNING: Delegated to the 'execute' command.\n         This behaviour has been deprecated and will be removed in a future release.\n         Please use the 'execute' command directly.\n", 'points': [{'syntax': '2', 'runtime': '2', 'testcase': '2'}]}
2025-08-13 10:58:37,791 [INFO] app - --------------------------------------------------------------------------------
